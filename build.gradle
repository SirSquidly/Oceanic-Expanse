buildscript {
    repositories {
        maven {
            name = "Forge"
            url = "https://maven.minecraftforge.net"
        }
        maven {
            name = "Sponge"
            url = "https://repo.spongepowered.org/maven"
        }
        mavenCentral()
    }
    dependencies {
        classpath 'com.anatawa12.forge:ForgeGradle:2.3-1.0.8'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'

version = "1.2.2"
group = "com.sirsquidly.oe"
archivesBaseName = "OceanicExpanse"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    mappings = "stable_39"
    
    def args = ["-Dmixin.debug.export=true",
                '-Dmixin.hotSwap=true',
                '-Dmixin.checks.interfaces=true'
                ]

    clientJvmArgs.addAll(args)
    serverJvmArgs.addAll(args)
}

repositories
{
	maven {
        name = "Curse Maven"
        url = "https://cursemaven.com"
    }
    maven {
        name = "CleanroomMC"
        url = "https://maven.cleanroommc.com"
    }
    maven {
        // Fluidlogged API files
        url 'https://jitpack.io'
    }
    maven {
        //JEI files
        name = "DVS1 Maven FS"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // Fallback maven mirror for JEI files
        name = "ModMaven"
        url = "http://modmaven.k-4u.nl"
    }
    
    maven {
        name = 'Sponge'
        url = uri('https://repo.spongepowered.org/maven')
    }
}

// This thing is used so the Assets are properly processed
sourceSets { main { output.resourcesDir = output.classesDir } }

dependencies
{
	deobfCompile "com.github.jbredwards:fluidlogged-api:${fluidlogged_api_version}"	
	deobfProvided "mezz.jei:jei_${mc_version}:${jei_version}"

    /* Replace the file ID with the desired version */
    deobfCompile "curse.maven:aquaacrobatics-321792:${aqua_acrobatics_version}"

	implementation "zone.rong:mixinbooter:8.4"
	//implementation "curse.maven:mixin-booter-419286:${project.mixinbooter_version}"
    annotationProcessor "org.spongepowered:mixin:${project.mixin_version}:processor"	
}
processResources
{
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    add sourceSets.main, "refmap.oe.json"
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
        attributes(
                'FMLCorePlugin': 'com.sirsquidly.oe.core.OECore',
                'FMLCorePluginContainsFMLMod': 'true',
                'ForceLoadAsMod': 'true' // Swap to 'true' when building .jar
        )
    }
}